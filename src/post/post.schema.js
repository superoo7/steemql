const schema = `
extend type Query {
  # Get multiple posts.
  posts(by: String, query: PostQuery): [Post]
  # Get single post
  post(username: String!, permlink: String!): Post
}

extend type Mutation {
  # Convenience method to create a post with minimal effort.
  createPost(post: PostInput!, options: PostOptions, key: String!): _Discussion 
  # createComment(comment: 
  createComment(comment: CommentInput!, options: PostOptions, key: String): _Discussion
}

type Post {
  id: ID!
  active_votes: [_Vote]
  author: String!
  body: String!
  body_length: Int
  cashout_time: String
  category: String!
  created: String!
  json_metadata: String
  last_update: String
  net_votes: Int 
  percent_steem_dollars: Int
  permlink: String!
  reblogged_by: [String]
  reward_weight: Int
  title: String!
  total_vote_weight: Int
  # Returns the whole user object
  user: User
  # Get active votes for the post
  votes: [Vote]
  # Get tags (from json_metadata) 
  tags: [String]
  # Get images (from json_metadata)
  images: [String]
  # Get format (from json_metadata)
  format: String
  # Get the app where the post has been created (json_metadata)
  app: String
  # Get community where the post has been created (json_metadata)
  community: String
  
}
  
# Custom Post input
input PostInput {
  author: String!
  body: String!
  tags: [String!]!
  title: String! 
  # Permlink will be autogenerated if omitted. You can provide your own one.
  permlink: String
  json_metadata: String
}

# Custom Post options
input PostOptions {
  allow_curation_rewards: Boolean
  allow_votes: Boolean
  author: String
  extensions: [_ExtensionInput] 
  max_accepted_payout: String
  percent_steem_dollars: Int
  permlink: String
}

# Custom CustomCommentInput
input CommentInput {
  author: String!
  parent_author: String!
  parent_permlink: String!
  body: String!
  # Permlink will be autogenerated if omitted. You can provide your own one.
  permlink: String
  json_metadata: String
}

# Query to filter posts.
input PostQuery {
  start_author: String
  start_permlink: String
  tag: String,
  limit: Int,
  truncate_body: Int
 }
 `;

module.exports = schema;
